buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://plugins.gradle.org/m2/'}
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
        classpath 'com.wynprice.cursemaven:CurseMaven:2.1.1'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: "com.wynprice.cursemaven"

version = "${mc_version}-${mod_version}"
group = 'powerlessri.steves_tasks'
archivesBaseName = "${mod_name}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: "${mcp_mappings}"
//    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                steves_tasks {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                steves_tasks {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'steves_tasks', '--all', '--output', file('src/generated/resources/')

            mods {
                steves_tasks {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        // JEI
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        // Steve's Factory Manager
        name = "hnOsmium0001 Bintray"
        url = "https://dl.bintray.com/hnosmium0001/Maven"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")

    implementation fg.deobf("curse.maven:refined-storage:${refined_storage_version}")
    implementation fg.deobf("vswe.stevesfactory:steves-factory-manager:${mc_version}-${sfm_version}")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "steves_tasks",
                "Specification-Vendor"    : "stevestaskssareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "stevestaskssareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

def static getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

task buildForCommit(type: Copy, dependsOn: build) {
    group = "build"
    from "$buildDir/libs"
    into "$buildDir/libs-custom"
    include "**/${mod_name}-*.jar"
    rename "${mod_name}-${mc_version}-${mod_version}.jar",
            "${mod_name}-${mc_version}-${mod_version}-${getCheckedOutGitCommitHash()}.jar"
}

bintray {
    user = findProperty('bintray.user')
    key = findProperty('bintray.apiKey')
    publications = ['BintrayPublication']
    pkg {
        repo = 'Maven'
        name = 'deep-mining'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/hnOsmium0001/DeepMining.git'
        version {
            name = "$project.version"
            released = new Date()
        }
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}

publishing {
    publications {
        BintrayPublication(MavenPublication) {
            artifact reobfArtifact
            groupId project.group
            artifactId 'deep-mining'
            version project.version
        }
    }
}
